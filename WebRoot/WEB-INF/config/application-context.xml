<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
default-lazy-init="true">


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
				<value>/WEB-INF/config/jeecms/jeecms.properties</value>
				<value>/WEB-INF/config/plug/**/*.properties</value>
			</list>
		</property>
		<qualifier value="main"/>
	</bean>
	<bean id="propertyUtils" class="com.jeecms.common.util.PropertyUtils">
		<property name="properties" ref="properties"/>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true"/>
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>
		<property name="minPoolSize" value="${cpool.minPoolSize}"/>
		<property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
		<property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
		<property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
	</bean>
	
	<!--  
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName">  
            <value>jndi</value>  
        </property>  
    </bean>
	 -->
	<bean id="cacheRegionFactory" class="com.jeecms.common.web.WebSingletonEhCacheRegionFactory"/>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingLocations" value="#{propertyUtils.getList('hibernate.hbm')}"/>	
		<property name="hibernateProperties">
			<value>
			hibernate.dialect=${hibernate.dialect}
			hibernate.show_sql=false
			hibernate.format_sql=false
			hibernate.query.substitutions=true 1, false 0
			hibernate.jdbc.batch_size=20
			hibernate.jdbc.use_streams_for_binary=true
			hibernate.temp.use_jdbc_metadata_defaults=false
			<!-- 是否自动提交事务 -->
            hibernate.connection.autocommit=true
            <!-- 指定hibernate在何时释放JDBC连接 -->
            hibernate.connection.release_mode=auto
            
			hibernate.cache.use_query_cache=true
			hibernate.cache.use_second_level_cache=true
           </value>
		</property>
		<property name="cacheRegionFactory">   
			<ref local="cacheRegionFactory"/>
		</property>
		
		<property name="entityInterceptor">   
			<ref local="treeInterceptor"/>
		</property>
	</bean>
    <bean id="treeInterceptor" class="com.jeecms.common.hibernate4.TreeIntercptor"/>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<context:annotation-config/>
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>